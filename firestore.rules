rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function userIsAuthenticated() {
      return request.auth != null;
    }

    function userId() {
      return request.auth.uid;
    }

    function userIsMerchantAdmin(merchantId) {
      return userIsAuthenticated() && get(/databases/$(database)/documents/merchant_admins/$(merchantId)).data[userId()] == true;
    }

    function userIsSignedUp() {
      return userIsAuthenticated() && request.auth.token.phone_number;
    }

    function userOwnsDoc(ownerUserId) {
      return ownerUserId == userId();
    }

    match /merchants/{merchantId} {
      allow read, write, delete: if userIsMerchantAdmin(merchantId);
      allow read: if userIsAuthenticated();
    }

    match /merchant_items/{merchantId} {
      allow read, write, delete: if userIsMerchantAdmin(merchantId);
      allow read: if userIsAuthenticated();
    }

    match /orders/{orderId} {
      allow read, write: if userIsMerchantAdmin(resource.data.merchantId);
      allow read: if userIsSignedUp() && userOwnsDoc(resource.data.userId);
    }

    match /order_items/{orderId} {
      allow read, write: if userIsMerchantAdmin(resource.data.merchantId);
      allow read: if userIsSignedUp() && userOwnsDoc(resource.data.userId);
    }

    match /users/{userId} {
      allow read, write: if userIsSignedUp() && userOwnsDoc(userId);
    }

    match /users_carts/{userId} {
      allow read, write: if userIsSignedUp() && userOwnsDoc(userId);
    }

    match /application/{config} {
      allow read: if userIsAuthenticated();
    }
  }
}